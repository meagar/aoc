WIRES = {:dr=>[:NOT, :dq], :kh=>[:kg, :OR, :kf], :eq=>[:ep, :OR, :eo], :b=>[44430], :gt=>[:NOT, :gs], :dp=>[:dd, :OR, :do], :ej=>[:eg, :AND, :ei], :ag=>[:y, :AND, :ae], :ka=>[:jx, :AND, :jz], :lg=>[:lf, :RSHIFT, 2], :ac=>[:z, :AND, :aa], :el=>[:dy, :AND, :ej], :bk=>[:bj, :OR, :bi], :km=>[:kk, :RSHIFT, 3], :co=>[:NOT, :cn], :gq=>[:gn, :AND, :gp], :ct=>[:cq, :AND, :cs], :es=>[:eo, :LSHIFT, 15], :ln=>[:lg, :OR, :lm], :ek=>[:dy, :OR, :ej], :dj=>[:NOT, :di], :fj=>[1, :AND, :fi], :kj=>[:kf, :LSHIFT, 15], :jz=>[:NOT, :jy], :fu=>[:NOT, :ft], :fv=>[:fs, :AND, :fu], :hs=>[:NOT, :hr], :cm=>[:ck, :OR, :cl], :js=>[:jp, :RSHIFT, 5], :jc=>[:iv, :OR, :jb], :iu=>[:is, :OR, :it], :lf=>[:ld, :OR, :le], :fd=>[:NOT, :fc], :dn=>[:NOT, :dm], :bz=>[:bn, :OR, :by], :am=>[:aj, :AND, :al], :ch=>[:cd, :LSHIFT, 15], :kc=>[:jp, :AND, :ka], :cu=>[:ci, :OR, :ct], :gy=>[:gv, :AND, :gx], :dm=>[:de, :AND, :dk], :aa=>[:x, :RSHIFT, 5], :eu=>[:et, :RSHIFT, 2], :aq=>[:x, :RSHIFT, 1], :ih=>[:ia, :OR, :ig], :ce=>[:bk, :LSHIFT, 1], :af=>[:y, :OR, :ae], :cb=>[:NOT, :ca], :h=>[:e, :AND, :f], :ii=>[:ia, :AND, :ig], :cn=>[:ck, :AND, :cl], :ji=>[:NOT, :jh], :ab=>[:z, :OR, :aa], :eo=>[1, :AND, :en], :ie=>[:ib, :AND, :ic], :ei=>[:NOT, :eh], :jb=>[:iy, :AND, :ja], :bc=>[:NOT, :bb], :hb=>[:ha, :OR, :gz], :cy=>[1, :AND, :cx], :ay=>[:NOT, :ax], :ex=>[:ev, :OR, :ew], :bo=>[:bn, :RSHIFT, 2], :et=>[:er, :OR, :es], :fb=>[:eu, :OR, :fa], :kb=>[:jp, :OR, :ka], :ed=>[:ea, :AND, :eb], :n=>[:k, :AND, :m], :ev=>[:et, :RSHIFT, 3], :ew=>[:et, :RSHIFT, 5], :is=>[:hz, :RSHIFT, 1], :kk=>[:ki, :OR, :kj], :i=>[:NOT, :h], :lz=>[:lv, :LSHIFT, 15], :bl=>[:as, :RSHIFT, 1], :hy=>[:hu, :LSHIFT, 15], :iz=>[:iw, :AND, :ix], :ly=>[:lf, :RSHIFT, 1], :fw=>[:fp, :OR, :fv], :an=>[1, :AND, :am], :bj=>[:ap, :LSHIFT, 1], :ao=>[:u, :LSHIFT, 1], :f=>[:b, :RSHIFT, 5], :jy=>[:jq, :AND, :jw], :iw=>[:iu, :RSHIFT, 3], :ik=>[:ih, :AND, :ij], :ja=>[:NOT, :iz], :dl=>[:de, :OR, :dk], :jg=>[:iu, :OR, :jf], :bf=>[:as, :AND, :bd], :e=>[:b, :RSHIFT, 3], :jx=>[:jq, :OR, :jw], :jd=>[:iv, :AND, :jb], :ci=>[:cg, :OR, :ch], :jh=>[:iu, :AND, :jf], :a=>[:lx], :cd=>[1, :AND, :cc], :ma=>[:ly, :OR, :lz], :em=>[:NOT, :el], :bi=>[1, :AND, :bh], :fe=>[:fb, :AND, :fd], :lr=>[:lf, :OR, :lq], :bp=>[:bn, :RSHIFT, 3], :ca=>[:bn, :AND, :by], :ai=>[:af, :AND, :ah], :cz=>[:cf, :LSHIFT, 1], :dy=>[:dw, :OR, :dx], :gw=>[:gj, :AND, :gu], :jj=>[:jg, :AND, :ji], :jt=>[:jr, :OR, :js], :bn=>[:bl, :OR, :bm], :gk=>[:gj, :RSHIFT, 2], :cq=>[:cj, :OR, :cp], :gv=>[:gj, :OR, :gu], :o=>[:b, :OR, :n], :r=>[:o, :AND, :q], :bm=>[:bi, :LSHIFT, 15], :er=>[:dy, :RSHIFT, 1], :cx=>[:cu, :AND, :cw], :iy=>[:iw, :OR, :ix], :he=>[:hc, :OR, :hd], :c=>[0], :dd=>[:db, :OR, :dc], :kl=>[:kk, :RSHIFT, 2], :fk=>[:eq, :LSHIFT, 1], :eg=>[:dz, :OR, :ef], :ee=>[:NOT, :ed], :lx=>[:lw, :OR, :lv], :fz=>[:fw, :AND, :fy], :eh=>[:dz, :AND, :ef], :jr=>[:jp, :RSHIFT, 3], :lo=>[:lg, :AND, :lm], :cj=>[:ci, :RSHIFT, 2], :bh=>[:be, :AND, :bg], :lw=>[:lc, :LSHIFT, 1], :hp=>[:hm, :AND, :ho], :ju=>[:jr, :AND, :js], :ip=>[1, :AND, :io], :cp=>[:cm, :AND, :co], :id=>[:ib, :OR, :ic], :bg=>[:NOT, :bf], :fr=>[:fo, :RSHIFT, 5], :it=>[:ip, :LSHIFT, 15], :jw=>[:jt, :AND, :jv], :jf=>[:jc, :AND, :je], :dv=>[:du, :OR, :dt], :fy=>[:NOT, :fx], :az=>[:aw, :AND, :ay], :gi=>[:ge, :LSHIFT, 15], :al=>[:NOT, :ak], :fo=>[:fm, :OR, :fn], :fi=>[:ff, :AND, :fh], :cl=>[:ci, :RSHIFT, 5], :da=>[:cz, :OR, :cy], :ez=>[:NOT, :ey], :jv=>[:NOT, :ju], :lt=>[:NOT, :ls], :kx=>[:kk, :AND, :kv], :ij=>[:NOT, :ii], :kt=>[:kl, :AND, :kr], :jo=>[:jk, :LSHIFT, 15], :g=>[:e, :OR, :f], :bt=>[:NOT, :bs], :hl=>[:hi, :AND, :hk], :il=>[:hz, :OR, :ik], :en=>[:ek, :AND, :em], :ap=>[:ao, :OR, :an], :ep=>[:dv, :LSHIFT, 1], :ar=>[:an, :LSHIFT, 15], :gh=>[:fo, :RSHIFT, 1], :in=>[:NOT, :im], :ld=>[:kk, :RSHIFT, 1], :iq=>[:hw, :LSHIFT, 1], :ef=>[:ec, :AND, :ee], :hv=>[:hb, :LSHIFT, 1], :ke=>[:kb, :AND, :kd], :ak=>[:x, :AND, :ai], :dq=>[:dd, :AND, :do], :as=>[:aq, :OR, :ar], :ir=>[:iq, :OR, :ip], :do=>[:dl, :AND, :dn], :ix=>[:iu, :RSHIFT, 5], :be=>[:as, :OR, :bd], :gp=>[:NOT, :go], :fl=>[:fk, :OR, :fj], :kg=>[:jm, :LSHIFT, 1], :cw=>[:NOT, :cv], :ds=>[:dp, :AND, :dr], :dx=>[:dt, :LSHIFT, 15], :fm=>[:et, :RSHIFT, 1], :ea=>[:dy, :RSHIFT, 3], :fx=>[:fp, :AND, :fv], :q=>[:NOT, :p], :de=>[:dd, :RSHIFT, 2], :fc=>[:eu, :AND, :fa], :bd=>[:ba, :AND, :bc], :dk=>[:dh, :AND, :dj], :lu=>[:lr, :AND, :lt], :hx=>[:he, :RSHIFT, 1], :fa=>[:ex, :AND, :ez], :dh=>[:df, :OR, :dg], :fn=>[:fj, :LSHIFT, 15], :ky=>[:NOT, :kx], :gr=>[:gk, :OR, :gq], :dz=>[:dy, :RSHIFT, 2], :gj=>[:gh, :OR, :gi], :lm=>[:lj, :AND, :ll], :aj=>[:x, :OR, :ai], :cc=>[:bz, :AND, :cb], :lv=>[1, :AND, :lu], :au=>[:as, :RSHIFT, 3], :cf=>[:ce, :OR, :cd], :io=>[:il, :AND, :in], :dw=>[:dd, :RSHIFT, 1], :lp=>[:NOT, :lo], :t=>[:c, :LSHIFT, 1], :df=>[:dd, :RSHIFT, 3], :dg=>[:dd, :RSHIFT, 5], :lk=>[:lh, :AND, :li], :li=>[:lf, :RSHIFT, 5], :eb=>[:dy, :RSHIFT, 5], :ku=>[:NOT, :kt], :ba=>[:at, :OR, :az], :z=>[:x, :RSHIFT, 3], :ll=>[:NOT, :lk], :lc=>[:lb, :OR, :la], :s=>[1, :AND, :r], :lj=>[:lh, :OR, :li], :lq=>[:ln, :AND, :lp], :kn=>[:kk, :RSHIFT, 5], :ec=>[:ea, :OR, :eb], :cv=>[:ci, :AND, :ct], :d=>[:b, :RSHIFT, 2], :ki=>[:jp, :RSHIFT, 1], :cs=>[:NOT, :cr], :je=>[:NOT, :jd], :jq=>[:jp, :RSHIFT, 2], :jp=>[:jn, :OR, :jo], :lh=>[:lf, :RSHIFT, 3], :dt=>[1, :AND, :ds], :ls=>[:lf, :AND, :lq], :le=>[:la, :LSHIFT, 15], :fh=>[:NOT, :fg], :bb=>[:at, :AND, :az], :ax=>[:au, :AND, :av], :kz=>[:kw, :AND, :ky], :x=>[:v, :OR, :w], :kw=>[:kk, :OR, :kv], :kv=>[:ks, :AND, :ku], :lb=>[:kh, :LSHIFT, 1], :la=>[1, :AND, :kz], :kd=>[:NOT, :kc], :y=>[:x, :RSHIFT, 2], :ff=>[:et, :OR, :fe], :fg=>[:et, :AND, :fe], :ad=>[:NOT, :ac], :jm=>[:jl, :OR, :jk], :jk=>[1, :AND, :jj], :cg=>[:bn, :RSHIFT, 1], :kq=>[:NOT, :kp], :ck=>[:ci, :RSHIFT, 3], :ey=>[:ev, :AND, :ew], :kf=>[1, :AND, :ke], :cr=>[:cj, :AND, :cp], :jl=>[:ir, :LSHIFT, 1], :gx=>[:NOT, :gw], :at=>[:as, :RSHIFT, 2], :jn=>[:iu, :RSHIFT, 1], :dc=>[:cy, :LSHIFT, 15], :hi=>[:hg, :OR, :hh], :db=>[:ci, :RSHIFT, 1], :aw=>[:au, :OR, :av], :kp=>[:km, :AND, :kn], :hc=>[:gj, :RSHIFT, 1], :iv=>[:iu, :RSHIFT, 2], :ae=>[:ab, :AND, :ad], :du=>[:da, :LSHIFT, 1], :bx=>[:NOT, :bw], :ko=>[:km, :OR, :kn], :kr=>[:ko, :AND, :kq], :by=>[:bv, :AND, :bx], :ks=>[:kl, :OR, :kr], :hu=>[1, :AND, :ht], :di=>[:df, :AND, :dg], :ah=>[:NOT, :ag], :k=>[:d, :OR, :j], :l=>[:d, :AND, :j], :p=>[:b, :AND, :n], :gg=>[:gf, :OR, :ge], :ha=>[:gg, :LSHIFT, 1], :bq=>[:bn, :RSHIFT, 5], :bv=>[:bo, :OR, :bu], :gz=>[1, :AND, :gy], :w=>[:s, :LSHIFT, 15], :if=>[:NOT, :ie], :av=>[:as, :RSHIFT, 5], :bw=>[:bo, :AND, :bu], :im=>[:hz, :AND, :ik], :bs=>[:bp, :AND, :bq], :v=>[:b, :RSHIFT, 1], :m=>[:NOT, :l], :br=>[:bp, :OR, :bq], :j=>[:g, :AND, :i], :bu=>[:br, :AND, :bt], :u=>[:t, :OR, :s], :ic=>[:hz, :RSHIFT, 5], :gs=>[:gk, :AND, :gq], :gf=>[:fl, :LSHIFT, 1], :hg=>[:he, :RSHIFT, 3], :hd=>[:gz, :LSHIFT, 15], :hm=>[:hf, :OR, :hl], :ge=>[1, :AND, :gd], :ga=>[:fo, :OR, :fz], :ig=>[:id, :AND, :if], :gb=>[:fo, :AND, :fz], :gu=>[:gr, :AND, :gt], :hq=>[:he, :OR, :hp], :ft=>[:fq, :AND, :fr], :gd=>[:ga, :AND, :gc], :fp=>[:fo, :RSHIFT, 2], :gn=>[:gl, :OR, :gm], :hj=>[:hg, :AND, :hh], :ho=>[:NOT, :hn], :go=>[:gl, :AND, :gm], :hh=>[:he, :RSHIFT, 5], :gc=>[:NOT, :gb], :ht=>[:hq, :AND, :hs], :ib=>[:hz, :RSHIFT, 3], :ia=>[:hz, :RSHIFT, 2], :fs=>[:fq, :OR, :fr], :hz=>[:hx, :OR, :hy], :hr=>[:he, :AND, :hp], :gm=>[:gj, :RSHIFT, 5], :hn=>[:hf, :AND, :hl], :hw=>[:hv, :OR, :hu], :hk=>[:NOT, :hj], :gl=>[:gj, :RSHIFT, 3], :fq=>[:fo, :RSHIFT, 3], :hf=>[:he, :RSHIFT, 2]}

$wire_cache = {}

def eval_wire(wire)
  $wire_cache[wire] ||= compute_wire(wire)
end

def compute_wire(wire)
  return wire if wire.is_a?(Numeric)
  return 3176 if wire == :b
  p wire
  value = WIRES[wire]

  if value.is_a?(Numeric)
    value
  elsif value.length == 1
    return eval_wire(value[0])
  elsif value[0] == :NOT
    return ~eval_wire(value[1])
  elsif value[1] == :OR
    return eval_wire(value[0]) | eval_wire(value[2])
  elsif value[1] == :AND
    return eval_wire(value[0]) & eval_wire(value[2])
  elsif value[1] == :LSHIFT
    return eval_wire(value[0]) << eval_wire(value[2])
  elsif value[1] == :RSHIFT
    return eval_wire(value[0]) >> eval_wire(value[2])
  else
    p value
    raise "unknown value"
  end
end

p eval_wire(:a)
